name:                inline-fortran
version:             0.1.0.0
github:              "hasanalrasyid/inline-fortran"
license:             BSD3
author:              "Hasan Al Rasyid"
maintainer:          "hasan@cphys.s.kanazawa-u.ac.jp"
copyright:           "2019 Hasan Al Rasyid"

extra-source-files:
- README.md
- ChangeLog.md

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Web

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the README on GitHub at <https://github.com/hasanalrasyid/inline-fortran#readme>

default-extensions:
  - DeriveDataTypeable
  - CPP
  - QuasiQuotes
  - TemplateHaskell
#  - GeneralizedNewtypeDeriving
  - ForeignFunctionInterface
  - ScopedTypeVariables
  - MonadFailDesugaring

dependencies:
    - base >= 4.7 && < 5
    - ansi-wl-pprint
    - bytestring
    - containers
    - hashable
    - mtl
    - parsec
    - parsers
    # bumped up to 2.14.0.0 to have addForeignFilePath
    - template-haskell >= 2.14.0.0
    - transformers
    - unordered-containers
    - vector

    - QuickCheck
    - directory
    - filepath
    - binary

    - prettyprinter
    - deepseq
    - language-rust # >= 0.2.0.27
    - array
    - json
    - process
    - random

#    - fortran-src

    - inline-c
    - uniplate
    - text
    - lens

    - pretty
    - GenericPretty
    - fgl
      #needed for fortran
    - split
    - raw-strings-qq

library:
  build-tools:
    - alex
    - happy
  source-dirs:
    - src
    - lang
  extra-libraries:  gfortran quadmath #    gsl gslcblas m
  other-extensions:
    TemplateHaskell
  ghc-options:
    - -ddump-splices
    - -ddump-to-file
    - -Wall
# exposed-modules:  Language.Fortran.Pretty
#                   Language.Fortran.Parser
#                   Language.Fortran.Parser.Literals
#                   Language.Fortran.Parser.ParseMonad
#                   Language.Fortran.Parser.Reversed
#                   Language.Fortran.Syntax
#                   Language.Fortran.Quote
#                   Language.Fortran.Pretty.Util
#                   Language.Fortran.Pretty.Literals
#                   Language.Fortran.Pretty.Resolve
#                   Language.Fortran.Pretty.Internal
#                   Language.Fortran.Syntax.AST
#                   Language.Fortran.Syntax.Token

# other-modules:  Language.Fortran.Parser.Literals
#                 Language.Fortran.Parser.Reversed
#                 Language.Fortran.Pretty.Resolve
#                 Language.Fortran.Pretty.Literals
#                 Language.Fortran.Pretty.Util
#                 Language.Fortran.Syntax.AST
#                 Language.Fortran.Syntax.Token

#executables:
tests:
  i:
    main:                Main.hs
    source-dirs:         app
    #c-sources:           app/Main.c
    cc-options:           -Wall -O2
    ghc-options:
    - -ddump-splices
    - -ddump-to-file
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -keep-tmp-files
    - -Wno-orphans
    dependencies:
    - inline-fortran
    - vector

#tests:
#  inline-fortran-test:
#    main:                Spec.hs
#    source-dirs:         test
#    ghc-options:
#    - -threaded
#    - -rtsopts
#    - -with-rtsopts=-N
#    dependencies:
#    - inline-fortran
